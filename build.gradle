plugins {
    id "java"
    id "maven"
    id "idea"
    id "signing"
    id "com.github.hierynomus.license" version "0.13.1"
    id 'net.saliman.cobertura' version '2.3.1'
    id 'com.github.kt3k.coveralls' version '2.6.3'
}

group = 'org.zalando'

def jdkVersion = 1.6
sourceCompatibility = jdkVersion
targetCompatibility = jdkVersion

cobertura.coverageFormats = ['html', 'xml'] // coveralls plugin depends on xml format report

repositories {
    mavenCentral()
}

dependencies {
    compile('net.jodah:failsafe:0.8.1',
            'io.dropwizard.metrics:metrics-core:3.2.3',
            'org.springframework.boot:spring-boot-starter-actuator:1.5.1.RELEASE'
    )

    compileOnly('org.projectlombok:lombok:1.16.12')

    testCompile(
            'org.springframework.boot:spring-boot-starter-test:1.5.1.RELEASE',
            "org.springframework.boot:spring-boot-starter-web:1.5.1.RELEASE",
            'junit:junit:4.12'
    )
}

test {
    systemProperties System.properties
}

jar {
    baseName = "failsafe-actuator"

    manifest {
        attributes("Implementation-Title": "failsafe-actuator",
                "Implementation-Version": version)
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            def userName = hasProperty('ossrhUsername') ? ossrhUsername : ''
            def password = hasProperty('ossrhPassword') ? ossrhUsername : ''

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: userName, password: password)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: userName, password: password)
            }

            pom.project {
                name "failsafe-actuator"
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Failsafe-Actuator provides an out of the box endpoint for Failsafe'
                url 'https://github.com/zalando-incubator/failsafe-actuator'

                scm {
                    url 'https://github.com/zalando-incubator/failsafe-actuator'
                }

                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id 'malpi'
                        name 'Malte Pickhan'
                        email 'malte.pickhan@zalando.de'
                    }
                }
            }
        }
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}

license { header = file('LICENSE') }
